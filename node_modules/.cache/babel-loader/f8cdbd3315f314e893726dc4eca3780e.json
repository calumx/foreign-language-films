{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Calum\\\\Documents\\\\Coding\\\\Foreign Language Films\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\Calum\\\\Documents\\\\Coding\\\\Foreign Language Films\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Calum\\\\Documents\\\\Coding\\\\Foreign Language Films\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Calum\\\\Documents\\\\Coding\\\\Foreign Language Films\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"C:\\\\Users\\\\Calum\\\\Documents\\\\Coding\\\\Foreign Language Films\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Calum\\\\Documents\\\\Coding\\\\Foreign Language Films\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import axios from'axios';import'./custom.css';import FilmInfo from'./FilmInfo';import Recommend from'./Recommend';import AddFilm from'./AddFilm';var Tmdb=/*#__PURE__*/function(_React$Component){_inherits(Tmdb,_React$Component);var _super=_createSuper(Tmdb);function Tmdb(props){var _this;_classCallCheck(this,Tmdb);_this=_super.call(this,props);_this.i=2;_this.apiData=[];_this.url='https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';_this.state={foreignFilms:[],englishFilms:[],percentage:0};_this.refresher=function(){axios.get(_this.url+'&sort_by=created_at.desc').then(function(x){_this.apiData.push(x.data.results[0]);_this.organiseData();});};_this.refresher=_this.refresher.bind(_assertThisInitialized(_this));return _this;}_createClass(Tmdb,[{key:\"getAllPages\",value:function getAllPages(){var _this2=this;axios.get(this.url+'&page='+this.i).then(function(x){var _this2$apiData;(_this2$apiData=_this2.apiData).push.apply(_this2$apiData,_toConsumableArray(x.data.results));_this2.i++;if(_this2.i<=x.data.total_pages){_this2.getAllPages();}else _this2.organiseData();});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;axios.get(this.url).then(function(x){var _this3$apiData;(_this3$apiData=_this3.apiData).push.apply(_this3$apiData,_toConsumableArray(x.data.results));if(_this3.i<=x.data.total_pages){_this3.getAllPages();}});}},{key:\"organiseData\",value:function organiseData(){var foreignFilms=this.apiData.filter(function(z){return z.original_language!=='en';});var englishFilms=this.apiData.filter(function(eng){return eng.original_language==='en';});var percentage=foreignFilms.length/this.apiData.length*100;if(!Number.isInteger(percentage)){percentage=percentage.toFixed(2);}this.setState({foreignFilms:foreignFilms,englishFilms:englishFilms,percentage:percentage});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FilmInfo,{foreign:this.state.foreignFilms,english:this.state.englishFilms,percentage:this.state.percentage}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(Recommend,null),/*#__PURE__*/React.createElement(AddFilm,{updater:this.refresher})));}}]);return Tmdb;}(React.Component);export{Tmdb as default};","map":{"version":3,"sources":["C:/Users/Calum/Documents/Coding/Foreign Language Films/src/Tmdb.js"],"names":["React","axios","FilmInfo","Recommend","AddFilm","Tmdb","props","i","apiData","url","state","foreignFilms","englishFilms","percentage","refresher","get","then","x","push","data","results","organiseData","bind","total_pages","getAllPages","filter","z","original_language","eng","length","Number","isInteger","toFixed","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './custom.css';\r\nimport FilmInfo from './FilmInfo';\r\nimport Recommend from './Recommend';\r\nimport AddFilm from './AddFilm';\r\n\r\nexport default class Tmdb extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refresher = this.refresher.bind(this);\r\n  }\r\n\r\n  i = 2;\r\n  apiData = [];\r\n\r\n  url =\r\n    'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\r\n\r\n  state = {\r\n    foreignFilms: [],\r\n    englishFilms: [],\r\n    percentage: 0,\r\n  };\r\n\r\n  getAllPages() {\r\n    axios.get(this.url + '&page=' + this.i).then((x) => {\r\n      this.apiData.push(...x.data.results);\r\n      this.i++;\r\n      if (this.i <= x.data.total_pages) {\r\n        this.getAllPages();\r\n      } else this.organiseData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(this.url).then((x) => {\r\n      this.apiData.push(...x.data.results);\r\n      if (this.i <= x.data.total_pages) {\r\n        this.getAllPages();\r\n      }\r\n    });\r\n  }\r\n\r\n  refresher = () => {\r\n    axios.get(this.url + '&sort_by=created_at.desc').then((x) => {\r\n      this.apiData.push(x.data.results[0]);\r\n      this.organiseData();\r\n    });\r\n  };\r\n\r\n  organiseData() {\r\n    let foreignFilms = this.apiData.filter((z) => z.original_language !== 'en');\r\n    let englishFilms = this.apiData.filter(\r\n      (eng) => eng.original_language === 'en'\r\n    );\r\n    let percentage = (foreignFilms.length / this.apiData.length) * 100;\r\n    if (!Number.isInteger(percentage)) {\r\n      percentage = percentage.toFixed(2);\r\n    }\r\n    this.setState({ foreignFilms, englishFilms, percentage });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FilmInfo\r\n          foreign={this.state.foreignFilms}\r\n          english={this.state.englishFilms}\r\n          percentage={this.state.percentage}\r\n        />\r\n        <br />\r\n        <div className=\"buttons\">\r\n          <Recommend />\r\n          <AddFilm updater={this.refresher} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}