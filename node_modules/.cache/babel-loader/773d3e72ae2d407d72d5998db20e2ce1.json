{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Tmdb.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./custom.css\";\nimport FilmInfo from './FilmInfo';\nimport Recommend from './Recommend';\nimport AddFilm from './AddFilm';\nexport default class Tmdb extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\n    this.state = {\n      foreignFilms: [],\n      englishFilms: [],\n      percentage: 0\n    };\n  }\n\n  componentDidMount() {\n    let pages = 0;\n    let apiData = [];\n    axios.get(this.url).then(x => {\n      pages = x.data.total_pages;\n      apiData = x.data.results;\n\n      for (let i = 0; i <= pages; i++) {\n        axios.get(this.url + \"&page=\" + i).then(x => {\n          apiData.push(...x.data.results);\n        });\n      }\n\n      let foreignFilms = apiData.filter(y => y.original_language !== \"en\");\n      let englishFilms = apiData.filter(z => z.original_language == \"en\");\n      let percentage = foreignFilms.length / apiData.length * 100;\n\n      if (!Number.isInteger(percentage)) {\n        percentage = percentage.toFixed(2);\n      }\n\n      ;\n      this.setState({\n        foreignFilms,\n        englishFilms,\n        percentage\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilmInfo, {\n      foreign: this.state.foreignFilms,\n      english: this.state.englishFilms,\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Recommend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(AddFilm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 51\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Tmdb.js"],"names":["React","axios","FilmInfo","Recommend","AddFilm","Tmdb","Component","url","state","foreignFilms","englishFilms","percentage","componentDidMount","pages","apiData","get","then","x","data","total_pages","results","i","push","filter","y","original_language","z","length","Number","isInteger","toFixed","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CC,GAF8C,GAExC,iKAFwC;AAAA,SAG9CC,KAH8C,GAGtC;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAHsC;AAAA;;AAS9CC,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,KAAK,GAAE,CAAX;AACA,QAAIC,OAAO,GAAG,EAAd;AAEAb,IAAAA,KAAK,CAACc,GAAN,CAAU,KAAKR,GAAf,EACCS,IADD,CACMC,CAAC,IAAI;AACPJ,MAAAA,KAAK,GAAGI,CAAC,CAACC,IAAF,CAAOC,WAAf;AACAL,MAAAA,OAAO,GAAGG,CAAC,CAACC,IAAF,CAAOE,OAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,KAArB,EAA4BQ,CAAC,EAA7B,EAAiC;AAC7BpB,QAAAA,KAAK,CAACc,GAAN,CAAU,KAAKR,GAAL,GAAW,QAAX,GAAsBc,CAAhC,EACCL,IADD,CACMC,CAAC,IAAI;AACPH,UAAAA,OAAO,CAACQ,IAAR,CAAa,GAAGL,CAAC,CAACC,IAAF,CAAOE,OAAvB;AACH,SAHD;AAKH;;AAED,UAAIX,YAAY,GAAGK,OAAO,CAACS,MAAR,CAAgBC,CAAC,IAAIA,CAAC,CAACC,iBAAF,KAAwB,IAA7C,CAAnB;AACA,UAAIf,YAAY,GAAGI,OAAO,CAACS,MAAR,CAAgBG,CAAC,IAAIA,CAAC,CAACD,iBAAF,IAAuB,IAA5C,CAAnB;AACA,UAAId,UAAU,GAAIF,YAAY,CAACkB,MAAb,GAAoBb,OAAO,CAACa,MAA7B,GAAuC,GAAxD;;AACA,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBlB,UAAjB,CAAL,EAAmC;AAAEA,QAAAA,UAAU,GAAGA,UAAU,CAACmB,OAAX,CAAmB,CAAnB,CAAb;AAAoC;;AAAA;AACzE,WAAKC,QAAL,CAAc;AAACtB,QAAAA,YAAD;AAAeC,QAAAA,YAAf;AAA6BC,QAAAA;AAA7B,OAAd;AACH,KAlBD;AAoBH;;AAEDqB,EAAAA,MAAM,GAAG;AAEL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWC,YAA9B;AAA4C,MAAA,OAAO,EAAG,KAAKD,KAAL,CAAWE,YAAjE;AAA+E,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,eAAsC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAHJ,CADA;AAQH;;AA9C6C","sourcesContent":["import React from 'react';\r\nimport axios from  'axios';\r\nimport \"./custom.css\"\r\nimport FilmInfo from './FilmInfo';\r\nimport Recommend from './Recommend';\r\nimport AddFilm from './AddFilm';\r\n\r\nexport default class Tmdb extends React.Component {\r\n\r\n    url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13'\r\n    state = {\r\n        foreignFilms: [],\r\n        englishFilms: [],\r\n        percentage: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        let pages= 0;\r\n        let apiData = [];\r\n\r\n        axios.get(this.url)\r\n        .then(x => {\r\n            pages = x.data.total_pages;\r\n            apiData = x.data.results;\r\n\r\n            for (let i = 0; i <= pages; i++) {\r\n                axios.get(this.url + \"&page=\" + i)\r\n                .then(x => {\r\n                    apiData.push(...x.data.results)\r\n                })\r\n\r\n            }\r\n        \r\n            let foreignFilms = apiData.filter (y => y.original_language !== \"en\");\r\n            let englishFilms = apiData.filter (z => z.original_language == \"en\");\r\n            let percentage = (foreignFilms.length/apiData.length) * 100;\r\n            if (!Number.isInteger(percentage)) { percentage = percentage.toFixed(2) };\r\n            this.setState({foreignFilms, englishFilms, percentage});\r\n        })\r\n\r\n    }\r\n\r\n    render() { \r\n\r\n        return (\r\n        <div>\r\n            <FilmInfo foreign={this.state.foreignFilms} english= {this.state.englishFilms} percentage={this.state.percentage} />\r\n            <br />\r\n            <div className=\"buttons\"><Recommend /><AddFilm /></div>\r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}