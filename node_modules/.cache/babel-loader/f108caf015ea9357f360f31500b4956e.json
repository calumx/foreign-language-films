{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Tmdb.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./custom.css\";\nimport FilmInfo from './FilmInfo';\nimport Recommend from './Recommend';\nimport AddFilm from './AddFilm';\nexport default class Tmdb extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.i = 2;\n    this.url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\n    this.state = {\n      foreignFilms: [],\n      englishFilms: [],\n      percentage: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get(this.url).then(x => {\n      let pages = x.data.total_pages;\n      let apiData = x.data.results;\n\n      if (this.i < 3) {\n        axios.get(this.url + \"&page=\" + this.i).then(y => {\n          apiData.push(...y.data.results);\n          let foreignFilms = apiData.filter(y => y.original_language !== \"en\");\n          let englishFilms = apiData.filter(z => z.original_language == \"en\");\n          let percentage = foreignFilms.length / apiData.length * 100;\n\n          if (!Number.isInteger(percentage)) {\n            percentage = percentage.toFixed(2);\n          }\n\n          ;\n          this.setState({\n            foreignFilms,\n            englishFilms,\n            percentage\n          });\n          this.i++;\n          console.log(\"hey\");\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilmInfo, {\n      foreign: this.state.foreignFilms,\n      english: this.state.englishFilms,\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Recommend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(AddFilm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 51\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Tmdb.js"],"names":["React","axios","FilmInfo","Recommend","AddFilm","Tmdb","Component","i","url","state","foreignFilms","englishFilms","percentage","componentDidMount","get","then","x","pages","data","total_pages","apiData","results","y","push","filter","original_language","z","length","Number","isInteger","toFixed","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG9CC,CAH8C,GAG1C,CAH0C;AAAA,SAI9CC,GAJ8C,GAIxC,iKAJwC;AAAA,SAK9CC,KAL8C,GAKtC;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,UAAU,EAAE;AAHR,KALsC;AAAA;;AAW9CC,EAAAA,iBAAiB,GAAG;AAEhBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,KAAKN,GAAf,EACCO,IADD,CACMC,CAAC,IAAI;AACP,UAAIC,KAAK,GAAGD,CAAC,CAACE,IAAF,CAAOC,WAAnB;AACA,UAAIC,OAAO,GAAGJ,CAAC,CAACE,IAAF,CAAOG,OAArB;;AAEA,UAAI,KAAKd,CAAL,GAAS,CAAb,EAAgB;AACZN,QAAAA,KAAK,CAACa,GAAN,CAAU,KAAKN,GAAL,GAAW,QAAX,GAAsB,KAAKD,CAArC,EACCQ,IADD,CACMO,CAAC,IAAI;AACXF,UAAAA,OAAO,CAACG,IAAR,CAAa,GAAGD,CAAC,CAACJ,IAAF,CAAOG,OAAvB;AAEJ,cAAIX,YAAY,GAAGU,OAAO,CAACI,MAAR,CAAgBF,CAAC,IAAIA,CAAC,CAACG,iBAAF,KAAwB,IAA7C,CAAnB;AACA,cAAId,YAAY,GAAGS,OAAO,CAACI,MAAR,CAAgBE,CAAC,IAAIA,CAAC,CAACD,iBAAF,IAAuB,IAA5C,CAAnB;AACA,cAAIb,UAAU,GAAIF,YAAY,CAACiB,MAAb,GAAoBP,OAAO,CAACO,MAA7B,GAAuC,GAAxD;;AACA,cAAI,CAACC,MAAM,CAACC,SAAP,CAAiBjB,UAAjB,CAAL,EAAmC;AAAEA,YAAAA,UAAU,GAAGA,UAAU,CAACkB,OAAX,CAAmB,CAAnB,CAAb;AAAoC;;AAAA;AACzE,eAAKC,QAAL,CAAc;AAACrB,YAAAA,YAAD;AAAeC,YAAAA,YAAf;AAA6BC,YAAAA;AAA7B,WAAd;AACA,eAAKL,CAAL;AACAyB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEK,SAZD;AAaH;AACA,KApBL;AAsBC;;AAGLC,EAAAA,MAAM,GAAG;AAEL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWC,YAA9B;AAA4C,MAAA,OAAO,EAAG,KAAKD,KAAL,CAAWE,YAAjE;AAA+E,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,eAAsC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAHJ,CADA;AAQH;;AAhD6C","sourcesContent":["import React from 'react';\r\nimport axios from  'axios';\r\nimport \"./custom.css\"\r\nimport FilmInfo from './FilmInfo';\r\nimport Recommend from './Recommend';\r\nimport AddFilm from './AddFilm';\r\n\r\nexport default class Tmdb extends React.Component {\r\n\r\n\r\n    i = 2;\r\n    url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13'\r\n    state = {\r\n        foreignFilms: [],\r\n        englishFilms: [],\r\n        percentage: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(this.url)\r\n        .then(x => {\r\n            let pages = x.data.total_pages;\r\n            let apiData = x.data.results;\r\n\r\n            if (this.i < 3) { \r\n                axios.get(this.url + \"&page=\" + this.i)\r\n                .then(y => {\r\n                apiData.push(...y.data.results);\r\n\r\n            let foreignFilms = apiData.filter (y => y.original_language !== \"en\");\r\n            let englishFilms = apiData.filter (z => z.original_language == \"en\");\r\n            let percentage = (foreignFilms.length/apiData.length) * 100;\r\n            if (!Number.isInteger(percentage)) { percentage = percentage.toFixed(2) };\r\n            this.setState({foreignFilms, englishFilms, percentage});\r\n            this.i++;\r\n            console.log(\"hey\");\r\n\r\n                })\r\n            }\r\n            })\r\n\r\n        }\r\n\r\n\r\n    render() { \r\n\r\n        return (\r\n        <div>\r\n            <FilmInfo foreign={this.state.foreignFilms} english= {this.state.englishFilms} percentage={this.state.percentage} />\r\n            <br />\r\n            <div className=\"buttons\"><Recommend /><AddFilm /></div>\r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}