{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Suggestions.js\";\nimport React, { useState } from 'react';\nimport './custom.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction Suggestions(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const filmClick = film => (setShow(true), sendFilm());\n\n  let options = [];\n\n  const sendFilm = () => {\n    console.clear();\n\n    if (options) {\n      console.log(\"yup\");\n    }\n  };\n\n  if (props.results.length > 0) {\n    options = props.results.slice(0, 5).map(x => /*#__PURE__*/React.createElement(\"div\", {\n      id: \"clickable-div\",\n      onClick: filmClick,\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 64\n      }\n    }, x.title)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      animation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Success!\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Your film has been logged, and your data should now be updated.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Okedoke\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, options));\n  } else if (props.typed) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"No results\"));\n  } else return null;\n}\n\nexport default Suggestions;","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Suggestions.js"],"names":["React","useState","Modal","Button","Suggestions","props","show","setShow","handleClose","filmClick","film","sendFilm","options","console","clear","log","results","length","slice","map","x","id","title","typed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMO,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,SAAS,GAAIC,IAAD,KAAWH,OAAO,CAAC,IAAD,CAAP,EAAeI,QAAQ,EAAlC,CAAlB;;AAEA,MAAIC,OAAO,GAAG,EAAd;;AAEA,QAAMD,QAAQ,GAAG,MAAM;AACnBE,IAAAA,OAAO,CAACC,KAAR;;AACA,QAAIF,OAAJ,EAAa;AAAEC,MAAAA,OAAO,CAACE,GAAR,CAAY,KAAZ;AAAmB;AACrC,GAHD;;AAKJ,MAAIV,KAAK,CAACW,OAAN,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC1BL,IAAAA,OAAO,GAAGP,KAAK,CAACW,OAAN,CAAcE,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA8BC,CAAC,iBACzC;AAAK,MAAA,EAAE,EAAC,eAAR;AAAwB,MAAA,OAAO,EAAEX,SAAjC;AAA4C,MAAA,GAAG,EAAEW,CAAC,CAACC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACE,KAAP,CAAvD,CADU,CAAV;AAIJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEhB,IAAb;AAAmB,MAAA,MAAM,EAAIE,WAA7B;AAA0C,MAAA,SAAS,EAAE,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAJJ,eAKI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CALJ,CADG,eAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMI,OAAN,CAVG,CAAP;AAeC,GApBD,MAoBO,IAAIP,KAAK,CAACkB,KAAV,EAAiB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CAAP;AACH,GAFM,MAEA,OAAO,IAAP;AAEV;;AAED,eAAenB,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './custom.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Suggestions(props) {\r\n\r\n        const [show, setShow] = useState(false);\r\n\r\n        const handleClose = () => setShow(false);\r\n        const filmClick = (film) => (setShow(true), sendFilm());\r\n\r\n        let options = [];\r\n\r\n        const sendFilm = () => {\r\n            console.clear();\r\n            if (options) { console.log(\"yup\")}\r\n        }\r\n        \r\n    if (props.results.length > 0) {\r\n        options = props.results.slice(0, 5).map(x => (\r\n        <div id=\"clickable-div\" onClick={filmClick} key={x.id}><li>{x.title}</li></div>\r\n    ))\r\n    \r\n    return <div>\r\n        <Modal show={show} onHide = {handleClose} animation={true}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Success!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Your film has been logged, and your data should now be updated.</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Okedoke</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div>{options}</div>\r\n     \r\n        </div>;\r\n\r\n\r\n    } else if (props.typed) { \r\n        return <div><p>No results</p></div> \r\n    } else return null;\r\n        \r\n}\r\n\r\nexport default Suggestions;"]},"metadata":{},"sourceType":"module"}