{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Suggestions.js\";\nimport React, { useState } from 'react';\nimport './custom.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nfunction Suggestions(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const filmClick = x => (setShow(true), sendFilm(x.target.parentNode.getAttribute(\"filmid\")), props.updater(x.target.parentNode.getAttribute(\"filmid\")));\n\n  let options = [];\n\n  const sendFilm = x => {\n    axios.post('https://api.themoviedb.org/3/account/{account_id}/watchlist?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13', {\n      \"media_type\": \"movie\",\n      \"media_id\": x,\n      \"watchlist\": true\n    });\n  };\n\n  if (props.results.length > 0) {\n    options = props.results.slice(0, 5).map(x => /*#__PURE__*/React.createElement(\"div\", {\n      id: \"clickable-div\",\n      onClick: filmClick,\n      key: x.id,\n      filmid: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 78\n      }\n    }, x.title)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      animation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Success!\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Your film has been logged, and your data should now be updated.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Okedoke\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, options));\n  } else if (props.typed) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"No results\"));\n  } else return null;\n}\n\nexport default Suggestions;","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Suggestions.js"],"names":["React","useState","Modal","Button","axios","Suggestions","props","show","setShow","handleClose","filmClick","x","sendFilm","target","parentNode","getAttribute","updater","options","post","results","length","slice","map","id","title","typed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMQ,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,SAAS,GAAIC,CAAD,KAAQH,OAAO,CAAC,IAAD,CAAP,EAAeI,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,UAAT,CAAoBC,YAApB,CAAiC,QAAjC,CAAD,CAAvB,EAAqET,KAAK,CAACU,OAAN,CAAcL,CAAC,CAACE,MAAF,CAASC,UAAT,CAAoBC,YAApB,CAAiC,QAAjC,CAAd,CAA7E,CAAlB;;AAEA,MAAIE,OAAO,GAAG,EAAd;;AAEA,QAAML,QAAQ,GAAID,CAAD,IAAO;AACpBP,IAAAA,KAAK,CAACc,IAAN,CAAW,0JAAX,EAAuK;AACnK,oBAAc,OADqJ;AAEnK,kBAAYP,CAFuJ;AAGnK,mBAAa;AAHsJ,KAAvK;AAKH,GAND;;AAQJ,MAAIL,KAAK,CAACa,OAAN,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC1BH,IAAAA,OAAO,GAAGX,KAAK,CAACa,OAAN,CAAcE,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA8BX,CAAC,iBACzC;AAAK,MAAA,EAAE,EAAC,eAAR;AAAwB,MAAA,OAAO,EAAED,SAAjC;AAA4C,MAAA,GAAG,EAAEC,CAAC,CAACY,EAAnD;AAAuD,MAAA,MAAM,EAAEZ,CAAC,CAACY,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,CAAC,CAACa,KAAP,CAArE,CADU,CAAV;AAIJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEjB,IAAb;AAAmB,MAAA,MAAM,EAAIE,WAA7B;AAA0C,MAAA,SAAS,EAAE,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAJJ,eAKI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CALJ,CADG,eAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMQ,OAAN,CAVG,CAAP;AAeC,GApBD,MAoBO,IAAIX,KAAK,CAACmB,KAAV,EAAiB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CAAP;AACH,GAFM,MAEA,OAAO,IAAP;AAEV;;AAED,eAAepB,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './custom.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction Suggestions(props) {\r\n\r\n        const [show, setShow] = useState(false);\r\n\r\n        const handleClose = () => setShow(false);\r\n        const filmClick = (x) => (setShow(true), sendFilm(x.target.parentNode.getAttribute(\"filmid\")), props.updater(x.target.parentNode.getAttribute(\"filmid\")));\r\n\r\n        let options = [];\r\n\r\n        const sendFilm = (x) => {\r\n            axios.post('https://api.themoviedb.org/3/account/{account_id}/watchlist?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13', {\r\n                \"media_type\": \"movie\",\r\n                \"media_id\": x,\r\n                \"watchlist\": true\r\n            })  \r\n        }\r\n        \r\n    if (props.results.length > 0) {\r\n        options = props.results.slice(0, 5).map(x => (\r\n        <div id=\"clickable-div\" onClick={filmClick} key={x.id} filmid={x.id}><li>{x.title}</li></div>\r\n    ))\r\n    \r\n    return <div>\r\n        <Modal show={show} onHide = {handleClose} animation={true}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Success!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Your film has been logged, and your data should now be updated.</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\">Okedoke</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div>{options}</div>\r\n     \r\n        </div>;\r\n\r\n\r\n    } else if (props.typed) { \r\n        return <div><p>No results</p></div> \r\n    } else return null;\r\n        \r\n}\r\n\r\nexport default Suggestions;"]},"metadata":{},"sourceType":"module"}