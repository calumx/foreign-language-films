{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Tmdb.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./custom.css\";\nimport FilmInfo from './FilmInfo';\nimport Recommend from './Recommend';\nimport AddFilm from './AddFilm';\nexport default class Tmdb extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.i = 2;\n    this.apiData = [];\n    this.pages = 7;\n    this.url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\n    this.state = {\n      foreignFilms: [],\n      englishFilms: [],\n      percentage: 0,\n      test: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get(this.url).then(x => {\n      let apiData = x.data.results;\n\n      if (this.i <= this.pages) {\n        axios.get(this.url + \"&page=\" + this.i).then(y => {\n          apiData.push(...y.data.results);\n          let foreignFilms = apiData.filter(y => y.original_language !== \"en\");\n          let englishFilms = apiData.filter(z => z.original_language == \"en\");\n          let percentage = foreignFilms.length / apiData.length * 100;\n\n          if (!Number.isInteger(percentage)) {\n            percentage = percentage.toFixed(2);\n          }\n\n          ;\n          this.setState({\n            foreignFilms,\n            englishFilms,\n            percentage\n          });\n          console.log(this.i);\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    while (this.i < 7) {\n      this.apiData.push(5, 6, 7, 8);\n      this.i++;\n      this.setState({\n        test: this.i\n      });\n      console.log(this.apiData);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilmInfo, {\n      foreign: this.state.foreignFilms,\n      english: this.state.englishFilms,\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Recommend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(AddFilm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 51\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Tmdb.js"],"names":["React","axios","FilmInfo","Recommend","AddFilm","Tmdb","Component","i","apiData","pages","url","state","foreignFilms","englishFilms","percentage","test","componentDidMount","get","then","x","data","results","y","push","filter","original_language","z","length","Number","isInteger","toFixed","setState","console","log","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from  'axios';\r\nimport \"./custom.css\"\r\nimport FilmInfo from './FilmInfo';\r\nimport Recommend from './Recommend';\r\nimport AddFilm from './AddFilm';\r\n\r\nexport default class Tmdb extends React.Component {\r\n\r\n    i = 2;\r\n    apiData = [];\r\n    pages = 7;\r\n    url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13'\r\n    state = {\r\n        foreignFilms: [],\r\n        englishFilms: [],\r\n        percentage: 0,\r\n        test: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(this.url)\r\n        .then(x => {\r\n            let apiData = x.data.results;\r\n\r\n            if (this.i <= this.pages) { \r\n                axios.get(this.url + \"&page=\" + this.i)\r\n                .then(y => {\r\n                apiData.push(...y.data.results);\r\n\r\n            let foreignFilms = apiData.filter (y => y.original_language !== \"en\");\r\n            let englishFilms = apiData.filter (z => z.original_language == \"en\");\r\n            let percentage = (foreignFilms.length/apiData.length) * 100;\r\n            if (!Number.isInteger(percentage)) { percentage = percentage.toFixed(2) };\r\n            this.setState({foreignFilms, englishFilms,  percentage});\r\n            console.log(this.i);\r\n\r\n                })\r\n            }\r\n            })\r\n\r\n        }\r\n\r\n       componentDidUpdate() {\r\n            while (this.i < 7) {\r\n                this.apiData.push(5, 6, 7, 8);\r\n                this.i++;\r\n                this.setState({test: this.i})\r\n                console.log(this.apiData);\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    render() { \r\n\r\n        return (\r\n        <div>\r\n            <FilmInfo foreign={this.state.foreignFilms} english= {this.state.englishFilms} percentage={this.state.percentage} />\r\n            <br />\r\n            <div className=\"buttons\"><Recommend /><AddFilm /></div>\r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}