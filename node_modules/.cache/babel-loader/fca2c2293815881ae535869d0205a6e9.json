{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Tmdb.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Button from 'react-bootstrap/Button';\nimport \"./custom.css\";\nimport FilmInfo from './FilmInfo';\nimport Recommend from './Recommend';\nimport AddFilm from './AddFilm';\nexport default class Tmdb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = 'https://api.themoviedb.org/3/account/fidgetjnr/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\n    this.state = {\n      foreignFilms: [],\n      englishFilms: [],\n      percentage: 0,\n      isEmptyState: true\n    };\n\n    this.triggerAddFilmState = () => {\n      this.setState({ ...this.state,\n        isEmptyState: false,\n        isAddFilmState: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(this.url).then(x => {\n      const apiData = x.data.results;\n      const foreignFilms = apiData.filter(y => y.original_language !== \"en\");\n      const englishFilms = apiData.filter(z => z.original_language == \"en\");\n      const percentage = foreignFilms.length / apiData.length * 100;\n\n      if (!Number.isInteger(percentage)) {\n        percentage = percentage.toFixed(2);\n      }\n\n      ;\n      this.setState({\n        foreignFilms,\n        englishFilms,\n        percentage\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilmInfo, {\n      foreign: this.state.foreignFilms,\n      english: this.state.englishFilms,\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Recommend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(AddFilm, {\n      addFilm: this.triggerAddFilmState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.state.isEmptyState && \"yo\", this.state.isAddFilmState && \"blah\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Tmdb.js"],"names":["React","axios","ProgressBar","Button","FilmInfo","Recommend","AddFilm","Tmdb","Component","constructor","props","url","state","foreignFilms","englishFilms","percentage","isEmptyState","triggerAddFilmState","setState","isAddFilmState","componentDidMount","get","then","x","apiData","data","results","filter","y","original_language","z","length","Number","isInteger","toFixed","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAInBC,GAJmB,GAIb,8JAJa;AAAA,SAKnBC,KALmB,GAKX;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,UAAU,EAAE,CAHR;AAIJC,MAAAA,YAAY,EAAE;AAJV,KALW;;AAAA,SAwBnBC,mBAxBmB,GAwBG,MAAM;AACxB,WAAKC,QAAL,CAAc,EACV,GAAG,KAAKN,KADE;AAEVI,QAAAA,YAAY,EAAE,KAFJ;AAGVG,QAAAA,cAAc,EAAE;AAHN,OAAd;AAKH,KA9BkB;AAElB;;AAUDC,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,KAAKV,GAAf,EACCW,IADD,CACMC,CAAC,IAAI;AACP,YAAMC,OAAO,GAAGD,CAAC,CAACE,IAAF,CAAOC,OAAvB;AACA,YAAMb,YAAY,GAAGW,OAAO,CAACG,MAAR,CAAgBC,CAAC,IAAIA,CAAC,CAACC,iBAAF,KAAwB,IAA7C,CAArB;AACA,YAAMf,YAAY,GAAGU,OAAO,CAACG,MAAR,CAAgBG,CAAC,IAAIA,CAAC,CAACD,iBAAF,IAAuB,IAA5C,CAArB;AACA,YAAMd,UAAU,GAAIF,YAAY,CAACkB,MAAb,GAAoBP,OAAO,CAACO,MAA7B,GAAuC,GAA1D;;AACA,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBlB,UAAjB,CAAL,EAAmC;AAAEA,QAAAA,UAAU,GAAGA,UAAU,CAACmB,OAAX,CAAmB,CAAnB,CAAb;AAAoC;;AAAA;AACzE,WAAKhB,QAAL,CAAc;AAACL,QAAAA,YAAD;AAAeC,QAAAA,YAAf;AAA6BC,QAAAA;AAA7B,OAAd;AACH,KARD;AASH;;AAUDoB,EAAAA,MAAM,GAAG;AAEL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWC,YAA9B;AAA4C,MAAA,OAAO,EAAG,KAAKD,KAAL,CAAWE,YAAjE;AAA+E,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,eAAsC,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKE,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWI,YAAX,IAA2B,IAA/B,EAAqC,KAAKJ,KAAL,CAAWO,cAAX,IAA6B,MAAlE,CAJJ,CADA;AASH;;AA5C6C","sourcesContent":["import React from 'react';\r\nimport axios from  'axios';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"./custom.css\"\r\nimport FilmInfo from './FilmInfo';\r\nimport Recommend from './Recommend';\r\nimport AddFilm from './AddFilm';\r\n\r\nexport default class Tmdb extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    url = 'https://api.themoviedb.org/3/account/fidgetjnr/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13'\r\n    state = {\r\n        foreignFilms: [],\r\n        englishFilms: [],\r\n        percentage: 0,\r\n        isEmptyState: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get(this.url)\r\n        .then(x => {\r\n            const apiData = x.data.results;\r\n            const foreignFilms = apiData.filter (y => y.original_language !== \"en\");\r\n            const englishFilms = apiData.filter (z => z.original_language == \"en\");\r\n            const percentage = (foreignFilms.length/apiData.length) * 100;\r\n            if (!Number.isInteger(percentage)) { percentage = percentage.toFixed(2) };\r\n            this.setState({foreignFilms, englishFilms, percentage});\r\n        });\r\n    }\r\n\r\n    triggerAddFilmState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            isEmptyState: false,\r\n            isAddFilmState: true\r\n        })\r\n    }\r\n\r\n    render() { \r\n\r\n        return (\r\n        <div>\r\n            <FilmInfo foreign={this.state.foreignFilms} english= {this.state.englishFilms} percentage={this.state.percentage} />\r\n            <br />\r\n            <div className=\"buttons\"><Recommend /><AddFilm addFilm={this.triggerAddFilmState} /></div>\r\n            <p>{this.state.isEmptyState && \"yo\"}{this.state.isAddFilmState && \"blah\"}</p>\r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}