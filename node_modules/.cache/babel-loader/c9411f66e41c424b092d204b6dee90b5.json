{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Tmdb.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"./custom.css\";\nimport FilmInfo from './FilmInfo';\nimport Recommend from './Recommend';\nimport AddFilm from './AddFilm';\nexport default class Tmdb extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.pages = 0;\n    this.i = 2;\n    this.apiData = [];\n    this.url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\n    this.state = {\n      foreignFilms: [],\n      englishFilms: [],\n      percentage: 0\n    };\n  }\n\n  componentDidMount() {\n    while (this.i == this.pages) {\n      axios.get(this.url + \"&page=2\").then(x => {\n        this.apiData.push(...x.data.results);\n        console.clear();\n        console.log(this.apiData);\n        this.i++;\n      });\n    }\n  }\n\n  render() {\n    axios.get(this.url).then(x => {\n      this.pages = x.data.total_pages;\n      this.apiData = x.data.results;\n      let foreignFilms = this.apiData.filter(y => y.original_language !== \"en\");\n      let englishFilms = this.apiData.filter(z => z.original_language == \"en\");\n      let percentage = foreignFilms.length / this.apiData.length * 100;\n\n      if (!Number.isInteger(percentage)) {\n        percentage = percentage.toFixed(2);\n      }\n\n      ;\n      this.setState({\n        foreignFilms,\n        englishFilms,\n        percentage\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilmInfo, {\n      foreign: this.state.foreignFilms,\n      english: this.state.englishFilms,\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Recommend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(AddFilm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 51\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Tmdb.js"],"names":["React","axios","FilmInfo","Recommend","AddFilm","Tmdb","Component","pages","i","apiData","url","state","foreignFilms","englishFilms","percentage","componentDidMount","get","then","x","push","data","results","console","clear","log","render","total_pages","filter","y","original_language","z","length","Number","isInteger","toFixed","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG9CC,KAH8C,GAGvC,CAHuC;AAAA,SAI9CC,CAJ8C,GAI1C,CAJ0C;AAAA,SAK9CC,OAL8C,GAKpC,EALoC;AAAA,SAM9CC,GAN8C,GAMxC,iKANwC;AAAA,SAO9CC,KAP8C,GAOtC;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAPsC;AAAA;;AAa9CC,EAAAA,iBAAiB,GAAG;AAEZ,WAAO,KAAKP,CAAL,IAAU,KAAKD,KAAtB,EAA6B;AACzBN,MAAAA,KAAK,CAACe,GAAN,CAAU,KAAKN,GAAL,GAAW,SAArB,EACCO,IADD,CACMC,CAAC,IAAI;AACP,aAAKT,OAAL,CAAaU,IAAb,CAAkB,GAAGD,CAAC,CAACE,IAAF,CAAOC,OAA5B;AACAC,QAAAA,OAAO,CAACC,KAAR;AACAD,QAAAA,OAAO,CAACE,GAAR,CAAY,KAAKf,OAAjB;AACA,aAAKD,CAAL;AACH,OAND;AAQH;AACR;;AAEDiB,EAAAA,MAAM,GAAG;AAELxB,IAAAA,KAAK,CAACe,GAAN,CAAU,KAAKN,GAAf,EACCO,IADD,CACMC,CAAC,IAAI;AACP,WAAKX,KAAL,GAAaW,CAAC,CAACE,IAAF,CAAOM,WAApB;AACA,WAAKjB,OAAL,GAAeS,CAAC,CAACE,IAAF,CAAOC,OAAtB;AAEA,UAAIT,YAAY,GAAG,KAAKH,OAAL,CAAakB,MAAb,CAAqBC,CAAC,IAAIA,CAAC,CAACC,iBAAF,KAAwB,IAAlD,CAAnB;AACA,UAAIhB,YAAY,GAAG,KAAKJ,OAAL,CAAakB,MAAb,CAAqBG,CAAC,IAAIA,CAAC,CAACD,iBAAF,IAAuB,IAAjD,CAAnB;AACA,UAAIf,UAAU,GAAIF,YAAY,CAACmB,MAAb,GAAoB,KAAKtB,OAAL,CAAasB,MAAlC,GAA4C,GAA7D;;AACA,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBnB,UAAjB,CAAL,EAAmC;AAAEA,QAAAA,UAAU,GAAGA,UAAU,CAACoB,OAAX,CAAmB,CAAnB,CAAb;AAAoC;;AAAA;AACzE,WAAKC,QAAL,CAAc;AAACvB,QAAAA,YAAD;AAAeC,QAAAA,YAAf;AAA6BC,QAAAA;AAA7B,OAAd;AAEH,KAXD;AAcA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,YAA9B;AAA4C,MAAA,OAAO,EAAG,KAAKD,KAAL,CAAWE,YAAjE;AAA+E,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,eAAsC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAHJ,CADA;AAQH;;AAnD6C","sourcesContent":["import React from 'react';\r\nimport axios from  'axios';\r\nimport \"./custom.css\"\r\nimport FilmInfo from './FilmInfo';\r\nimport Recommend from './Recommend';\r\nimport AddFilm from './AddFilm';\r\n\r\nexport default class Tmdb extends React.Component {\r\n\r\n    \r\n    pages= 0;\r\n    i = 2;\r\n    apiData = [];\r\n    url = 'https://api.themoviedb.org/3/account/{account_id}/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13'\r\n    state = {\r\n        foreignFilms: [],\r\n        englishFilms: [],\r\n        percentage: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n            while (this.i == this.pages) {\r\n                axios.get(this.url + \"&page=2\")\r\n                .then(x => {\r\n                    this.apiData.push(...x.data.results)\r\n                    console.clear();\r\n                    console.log(this.apiData);\r\n                    this.i++;\r\n                })\r\n\r\n            }\r\n    }\r\n\r\n    render() { \r\n\r\n        axios.get(this.url)\r\n        .then(x => {\r\n            this.pages = x.data.total_pages;\r\n            this.apiData = x.data.results;\r\n\r\n            let foreignFilms = this.apiData.filter (y => y.original_language !== \"en\");\r\n            let englishFilms = this.apiData.filter (z => z.original_language == \"en\");\r\n            let percentage = (foreignFilms.length/this.apiData.length) * 100;\r\n            if (!Number.isInteger(percentage)) { percentage = percentage.toFixed(2) };\r\n            this.setState({foreignFilms, englishFilms, percentage});\r\n\r\n        })\r\n\r\n\r\n        return (\r\n        <div>\r\n            <FilmInfo foreign={this.state.foreignFilms} english= {this.state.englishFilms} percentage={this.state.percentage} />\r\n            <br />\r\n            <div className=\"buttons\"><Recommend /><AddFilm /></div>\r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}