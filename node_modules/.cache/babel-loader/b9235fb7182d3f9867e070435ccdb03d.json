{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\Foreign Language Films\\\\src\\\\Tmdb.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Button from 'react-bootstrap/Button';\nimport \"./custom.css\";\nimport FilmInfo from './FilmInfo';\nexport default class Tmdb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = 'https://api.themoviedb.org/3/account/fidgetjnr/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13';\n    this.state = {\n      foreignFilms: [],\n      englishFilms: [],\n      percentage: 0,\n      index: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const index = Math.floor(Math.random() * 10);\n    this.setState({\n      index\n    });\n  }\n\n  componentDidMount() {\n    axios.get(this.url).then(x => {\n      const apiData = x.data.results;\n      const foreignFilms = apiData.filter(y => y.original_language !== \"en\");\n      const englishFilms = apiData.filter(z => z.original_language == \"en\");\n      const percentage = foreignFilms.length / apiData.length * 100;\n\n      if (!Number.isInteger(percentage)) {\n        percentage = percentage.toFixed(2);\n      }\n\n      ;\n      this.setState({\n        foreignFilms,\n        englishFilms,\n        percentage\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.foreignFilms.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilmInfo, {\n      foreign: this.state.foreignFilms,\n      english: this.state.englishFilms,\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-progress-bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"custom-progress\",\n      style: {\n        width: \"55%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, \"Recommend me a film!\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.state.index));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/Foreign Language Films/src/Tmdb.js"],"names":["React","axios","ProgressBar","Button","FilmInfo","Tmdb","Component","constructor","props","url","state","foreignFilms","englishFilms","percentage","index","handleClick","bind","Math","floor","random","setState","componentDidMount","get","then","x","apiData","data","results","filter","y","original_language","z","length","Number","isInteger","toFixed","render","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from  'axios';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"./custom.css\"\r\nimport FilmInfo from './FilmInfo';\r\n\r\nexport default class Tmdb extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    url = 'https://api.themoviedb.org/3/account/fidgetjnr/watchlist/movies?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13'\r\n    state = {\r\n        foreignFilms: [],\r\n        englishFilms: [],\r\n        percentage: 0,\r\n        index: 0\r\n    };\r\n\r\n    handleClick() {\r\n        const index = Math.floor(Math.random() * 10);\r\n        this.setState({index});\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(this.url)\r\n        .then(x => {\r\n            const apiData = x.data.results;\r\n            const foreignFilms = apiData.filter (y => y.original_language !== \"en\");\r\n            const englishFilms = apiData.filter (z => z.original_language == \"en\");\r\n            const percentage = (foreignFilms.length/apiData.length) * 100;\r\n            if (!Number.isInteger(percentage)) { percentage = percentage.toFixed(2) };\r\n            this.setState({foreignFilms, englishFilms, percentage});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.foreignFilms.length) {\r\n            return <div />\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <FilmInfo foreign={this.state.foreignFilms} english= {this.state.englishFilms} percentage={this.state.percentage} />\r\n            <div className=\"custom-progress-bg\"><span className=\"custom-progress\" style={{width: \"55%\"}}></span></div>\r\n            <p><Button variant=\"primary\" onClick={this.handleClick}>Recommend me a film!</Button></p>\r\n            <p>{this.state.index}</p>\r\n            \r\n\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}