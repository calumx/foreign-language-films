{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calum\\\\documents\\\\coding\\\\foreign language films\\\\src\\\\Suggestions.js\";\nimport React, { useState } from 'react';\nimport './custom.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nfunction Suggestions(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const filmClick = film => (setShow(true), sendFilm(film));\n\n  let options = [];\n\n  const sendFilm = x => {\n    console.clear();\n    console.log(x);\n    axios.post('https://api.themoviedb.org/3/account/1/watchlist?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13', {\n      \"media_type\": \"movie\",\n      \"media_id\": 11,\n      \"watchlist\": true\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  if (props.results.length > 0) {\n    options = props.results.slice(0, 5).map(x => /*#__PURE__*/React.createElement(\"div\", {\n      id: \"clickable-div\",\n      onClick: e => this.filmClick(e),\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 79\n      }\n    }, x.title)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      animation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Success!\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Your film has been logged, and your data should now be updated.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Okedoke\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, options));\n  } else if (props.typed) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"No results\"));\n  } else return null;\n}\n\nexport default Suggestions;","map":{"version":3,"sources":["C:/Users/Calum/documents/coding/foreign language films/src/Suggestions.js"],"names":["React","useState","Modal","Button","axios","Suggestions","props","show","setShow","handleClose","filmClick","film","sendFilm","options","x","console","clear","log","post","then","response","error","results","length","slice","map","e","id","title","typed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './custom.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction Suggestions(props) {\r\n\r\n        const [show, setShow] = useState(false);\r\n\r\n        const handleClose = () => setShow(false);\r\n        const filmClick = (film) => (setShow(true), sendFilm(film));\r\n\r\n        let options = [];\r\n\r\n        const sendFilm = (x) => {\r\n            console.clear();\r\n            console.log(x);\r\n            axios.post('https://api.themoviedb.org/3/account/1/watchlist?api_key=d1e40fddb73df31e61693cbf7ef094aa&session_id=d38ef9ba5672c0c9660f9bdd47b123bf609c2a13', {\r\n                \"media_type\": \"movie\",\r\n                \"media_id\": 11,\r\n                \"watchlist\": true\r\n            })\r\n            .then((response) => {\r\n                console.log(response);\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n           \r\n        }\r\n        \r\n    if (props.results.length > 0) {\r\n        options = props.results.slice(0, 5).map(x => (\r\n        <div id=\"clickable-div\" onClick={(e) => this.filmClick(e)} key={x.id}><li>{x.title}</li></div>\r\n    ))\r\n    \r\n    return <div>\r\n        <Modal show={show} onHide = {handleClose} animation={true}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Success!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Your film has been logged, and your data should now be updated.</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Okedoke</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div>{options}</div>\r\n     \r\n        </div>;\r\n\r\n\r\n    } else if (props.typed) { \r\n        return <div><p>No results</p></div> \r\n    } else return null;\r\n        \r\n}\r\n\r\nexport default Suggestions;"]},"metadata":{},"sourceType":"module"}